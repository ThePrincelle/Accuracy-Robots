{"version":3,"sources":["images/robot.png","design/stars.js","welcome.js","components/QuestionComponent.js","components/AnswerComponent.js","components/law.js","MainGame.js","about.js","Router.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","rot","random_number","min","max","Math","floor","random","i","star_top","document","documentElement","clientHeight","star_left","clientWidth","star_radius","star_duration","body","innerHTML","console","log","createStars","Welcome","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","nameOnChanged","e","setState","name","target","value","validateName","changeRound","tours","round","playGame","cookie","state","location","href","_this2","react_default","a","createElement","Fragment","className","style","paddingBottom","textAlign","Form","Group","controlId","Label","Control","type","placeholder","onChange","step","defaultValue","Button","variant","size","block","onClick","marginLeft","marginBottom","position","left","bottom","Component","Question","ans","answers","map","Card","width","Header","as","Body","text","Footer","Answer","handleClick","callbackToParent","paddingLeft","paddingRight","Law","sidebarOpen","onSetSidebarOpen","bind","assertThisInitialized","open","react_sidebar_esm","docked","pullRight","sidebar","margin","ListGroup","Item","backgroundColor","onSetOpen","styles","color","background","React","Game","nbTours","tourAct","questions","currentQuestion","robotIntegrity","progColor","robotName","updateCurrentQuestion","removeQuestion","rand","length","prevState","nextTour","valInteg","endGame","updateIntegrity","finPartieModal","gameOver","Modal","Dialog","Title","marginRight","val","newVal","updateColorIntegrity","readCookie","nameEQ","ca","split","c","charAt","substring","indexOf","array","index","splice","nbtours","JsonData","reponses","repComp","r","push","AnswerComponent_Answer","rep","question","QuestionComponent_Question","concat","toConsumableArray","main","src","imgRobot","alt","ProgressBar","animated","now","label","marginTop","height","components_law","About","padding","paddingTop","Row","justifyContent","Col","sm","Img","Text","Accueil","src_welcome","Main","MainGame_Game","about","about_About","AppRouter","react_router_dom","react_router","path","exact","component","Boolean","window","hostname","match","ReactDOM","render","Helmet","content","Router","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5b667b61.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/robot.7dc0c6bd.png\";","var number_of_star = 200;\nvar rot;\n\nvar random_number = function (min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nvar createStars = function () {\n    var star_rotation = 'move_right;';\n\n    for (var i = 0; i < number_of_star; i++) {\n        rot = (star_rotation === 'move_right;' ? 'move_left;' : 'move_right;');\n        var star_top = random_number(0, document.documentElement.clientHeight);\n        var star_left = random_number(0, document.documentElement.clientWidth);\n        var star_radius = random_number(0, 4);\n        var star_duration = random_number(6, 16);\n\n        document.body.innerHTML += \"<div className='star' class='star' style='top: \" + star_top + \"px; left: \" + star_left + \"px; width: \" + star_radius + \"px; height: \" + star_radius + \"px; \" +\n        \"animation-name:\" + star_rotation + \"; animation-duration: \" + star_duration + \"s;'></div>\";\n    }\n    console.log(rot);\n};\n\ncreateStars();\n","import React, { Component } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport './css/welcome.css';\n\nclass Welcome extends Component{\n\n    constructor(props) {\n      super(props)\n    \n      this.state = {\n         name: \"\",\n         round: 5\n      }\n    }\n\n    nameOnChanged = (e) => {\n        this.setState({\n            name: e.target.value\n        });\n    }\n\n    validateName = (props) => {\n        props.target.value = \"\";\n    }\n\n    changeRound = (e) => {\n        let tours = e.target.value;\n        if(tours < 5){\n            tours = 5\n        } else if (tours > 10){\n            tours = 10\n        }\n        this.setState({\n            round: tours\n        });\n        console.log(\"Nb de tours : \" + tours);\n    }\n\n    playGame = (e) => {\n        document.cookie = 'name=' + this.state.name +'; path=/'\n        document.cookie = 'tours=' + this.state.round + '; path=/'\n\n        document.location.href = '/game'\n    }\n\n     render() {\n         return (\n            <>\n            <div className=\"welcome\">\n                <h1 className=\"welcomeTitle\">Accuracy Robots</h1>\n\n                <p style={{paddingBottom:\"2em\", textAlign: \"justify-center\"}}>\n                    L’ histoire se déroule en l’an 5347 après la colonisation de Mars. Celle-ci est devenue une planète où les robots et les humains vivent en parfaite harmonie.\n                    <br/><br/>\n                    Vous jouez l'un de ces robots. \n                    <br/>Pour rester en vie, faites attention à garder un niveau d'intégrité raisonnable, afin d'éviter l'auto-destruction.\n                    Vous serez confrontés à des situations, chacune d'entre-elles mettant en pratique les lois d'Asimov, que vous devrez respecter.\n                </p>\n                \n                <Form.Group controlId=\"form\">\n                    <Form.Label>Nom du robot</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"The Robot\" value={this.state.name} onChange={(e) => this.nameOnChanged(e)} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicChecbox\">\n                    <Form.Label>Nombre de tour(s)</Form.Label>\n                    <Form.Control type=\"number\" min=\"5\" max=\"10\" step=\"1\" defaultValue={this.state.round} onChange={(e) => this.changeRound(e)}/>\n                </Form.Group>\n\n                <Button variant=\"secondary\" size=\"sm\" block className=\"playButton\" onClick={this.playGame}>\n                    Jouer\n                </Button>\n            </div>\n            <Button size=\"sm\" variant=\"secondary\" style={{ marginLeft: '20px', marginBottom: '20px', position: 'absolute', left: '0', bottom: '0' }} href=\"/about\">Crédits</Button>\n            </>\n         )\n     }\n }\n\nexport default Welcome;\n","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nexport default class Question extends Component {\n    render()\n    {\n        //verifie que les reponses ont bien étées définies\n        let ans;\n        if(this.props.answers)\n        {\n            ans = this.props.answers.map(ans => {\n                return ans\n            })\n        }\n\n        return (\n            <Card className=\"question\" style={{ width: '20rem' }}>\n                <Card.Header as=\"h5\">\n                    Question\n                </Card.Header>\n                <Card.Body style={{ textAlign: \"justify\" }}>\n                    {this.props.text}\n                </Card.Body>\n                <Card.Footer className=\"answers\">\n                    {ans}\n                </Card.Footer>\n            </Card>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\n\nexport default class Answer extends Component {\n    handleClick = () => {\n        this.props.callbackToParent(this.props.value)\n    }\n\n    render()\n    {\n        return <Button style={{ paddingLeft: \"10px\", paddingRight: \"10px\", paddingBottom: \"5px\" }} size=\"sm\" block onClick={this.handleClick}>{this.props.text}</Button>\n    }\n}\n","import React from \"react\";\nimport Sidebar from \"react-sidebar\";\nimport {ListGroup, Button} from \"react-bootstrap\";\nimport '../css/law.css';\n\nclass Law extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sidebarOpen: false\n    };\n    this.onSetSidebarOpen = this.onSetSidebarOpen.bind(this);\n  }\n\n  onSetSidebarOpen(open) {\n    this.setState({ sidebarOpen: open });\n  }\n\n  render() {\n    return (\n      <Sidebar docked={false} pullRight={true}\n        sidebar={\n            <div className=\"lawStyle\">\n            <h5 style={{margin: '20px'}}>Les lois d'Asimov</h5>\n                <ListGroup className= \"listGroup\" variant=\"flush\">\n                    <ListGroup.Item style={{backgroundColor: 'transparent', textAlign: 'justify'}}>\n                        <h6 style={{textAlign: 'left'}}>Loi 1</h6>\n                        Un robot ne peut blesser un être humain ni, par son inaction, permettre qu'un humain soit blessé.\n                    </ListGroup.Item>\n                    <ListGroup.Item style={{backgroundColor: 'transparent', textAlign: 'justify'}}>\n                        <h6 style={{textAlign: 'left'}}>Loi 2</h6>\n                        Un robot doit obéir aux ordres donnés par les êtres humains, sauf si de tels ordres sont en contradiction avec la Première Loi.\n                    </ListGroup.Item>\n                    <ListGroup.Item style={{backgroundColor: 'transparent', textAlign: 'justify'}}>\n                        <h6 style={{textAlign: 'left'}}>Loi 3</h6>\n                        Un robot doit protéger sa propre existence aussi longtemps qu'une telle protection n'est pas en contradiction avec la Première et/ou la Deuxième Loi.\n                    </ListGroup.Item>\n                    <ListGroup.Item style={{backgroundColor: 'transparent', textAlign: 'justify'}}>\n                        <h6 style={{textAlign: 'left'}}>Loi zéro</h6>\n                        Un robot ne peut nuire à l’humanité ni laisser sans assistance l’humanité en danger.\n                    </ListGroup.Item>\n                </ListGroup>\n            </div>}\n        open={this.state.sidebarOpen}\n        onSetOpen={this.onSetSidebarOpen}\n        styles={{ sidebar: { color: 'white', background: 'rgb(0, 0, 0, 0.65)', width: '35em', position: 'fixed'}}}>\n        <Button size=\"sm\" style={{ margin: '20px', position: 'absolute', left: '0', bottom: '0' }} onClick={() => this.onSetSidebarOpen(true)}>Voir les lois</Button>\n      </Sidebar>\n    );\n  }\n}\n\nexport default Law;\n","import React, { Component } from 'react';\nimport JsonData from './data/tableaux.json'\nimport Question from './components/QuestionComponent';\nimport Answer from './components/AnswerComponent';\nimport Law from './components/law';\nimport { Card, ProgressBar, Modal, Button} from 'react-bootstrap';\nimport imgRobot from './images/robot.png';\n\n\nexport default class Game extends Component {\n    state = {\n        nbTours: 10,\n        tourAct: 1,\n        questions: [],\n        currentQuestion: -1,\n\n        robotIntegrity: 100,\n        progColor: \"success\",\n        robotName: \"RobotName\"\n    }\n\n    /**\n     * Met a jour la question actuelle\n     */\n    updateCurrentQuestion = () => {\n        this.removeQuestion(this.state.questions, this.state.currentQuestion);\n\n        let rand = Math.floor(Math.random() * this.state.questions.length);\n        this.setState(prevState => ({currentQuestion: rand}));\n    }\n\n    removeQuestion(array, index) {\n        if(index > -1){\n            array.splice(index,1);\n        }\n        console.log(\"Nouvelle liste des questions: \", this.state.questions)\n    }\n\n    /**\n     * Passe au prochain tour\n     */\n    nextTour = (valInteg) => {\n        if(this.state.tourAct < this.state.nbTours)\n        {\n            this.setState(prevState => ({\n                tourAct: prevState.tourAct+1\n            }));\n        }\n        else\n        {\n            this.endGame();\n        }\n        this.updateIntegrity(valInteg);\n        this.updateCurrentQuestion()\n    }\n\n    /**\n     * Fin de la partie avec victoire\n     */\n    endGame = () => {\n        return this.finPartieModal(\"Vous avez gagné ! Félicitations !\");\n    }\n\n    /**\n     * Fin de la partie défaite\n     */\n    gameOver = () => {\n        return this.finPartieModal(\"Vous avez perdu. Votre robot s'est auto-détruit !\");\n    }\n\n    finPartieModal = (text) => {\n        return (\n            <Modal.Dialog>\n            <Modal.Header>\n                <Modal.Title>Fin de la partie</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {text}\n            </Modal.Body>\n            <Modal.Footer>\n                <Button style={{ margin: \"0px\", marginRight: \"5px\"}} size=\"sm\" block variant=\"danger\" href=\"/\">Quitter</Button>\n                <Button style={{ margin: \"0px\" }} size=\"sm\" block variant=\"info\" href=\"/game\">Rejouer</Button>\n            </Modal.Footer>\n            </Modal.Dialog>\n        );\n    }\n\n    /**\n     * Met a jour l'intégrité du robot\n     */\n    updateIntegrity = (val) => {\n        let newVal\n        if (this.state.robotIntegrity + val >= 100) {\n            newVal = 100;\n        } else if (this.state.robotIntegrity + val <= 0) {\n            newVal = 0;\n        } else {\n            newVal = this.state.robotIntegrity + val;\n        }\n        this.setState({\n            robotIntegrity: newVal\n        });\n        this.updateColorIntegrity(newVal);\n    }\n\n    updateColorIntegrity = (val) => {\n        let color;\n        if (val <= 20){\n            color = \"danger\";\n        } else if (val <= 50) {\n            color = \"warning\";\n        } else {\n            color = \"success\";\n        }\n        this.setState({\n            progColor: color\n        })\n    }\n\n    readCookie = (name) => {\n        var nameEQ = name + \"=\";\n        var ca = document.cookie.split(';');\n        for (var i = 0; i < ca.length; i++) {\n            var c = ca[i];\n            while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n            if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n        }\n        return null;\n    }\n\n    /**\n     * Récupere toutes les questiosn dans le fichier JSON et les transforme en composants Questions / Answer\n     */\n    componentDidMount()\n    {\n        let nbtours;\n        if(this.readCookie(\"tours\")>10){\n            nbtours = 10;\n        }\n        else{\n            nbtours = this.readCookie(\"tours\");\n        }\n        this.setState({\n            nbTours: nbtours,\n            robotName: this.readCookie(\"name\") || \"The Robot\"\n        });\n        \n        JsonData.map((a) => {\n            //réponses pour une question\n            let reponses = a.reponses \n            //tableau de composants Answer\n            let repComp = [];\n            reponses.map((r) => {\n                repComp.push(<Answer callbackToParent={this.nextTour} text={r.rep} value={r.value}/>)\n                return r;\n            })\n            let question = <Question text={a.question} answers={repComp}/>\n            this.setState((prevState) => ({\n                questions: [...prevState.questions, question]\n            }))\n\n            return question;\n        })\n\n        this.updateCurrentQuestion()\n    }\n\n    render()\n    {\n        let main;\n        console.log(this.state.questions)\n        console.log(\"tour : \" +this.state.tourAct + \"/\" + this.state.nbTours + \" integrite : \" + this.state.robotIntegrity)\n\n        // eslint-disable-next-line eqeqeq\n        if(this.state.tourAct == this.state.nbTours && this.state.robotIntegrity > 0) \n        {\n            main = this.endGame()\n        }\n        else if(this.state.robotIntegrity <= 0)\n        {\n            main = this.gameOver()\n        }\n        else\n        {\n            console.log(this.state.questions[this.state.currentQuestion])\n            console.log(this.state.currentQuestion)\n            main = this.state.questions[this.state.currentQuestion];\n        }\n\n        console.log(main)\n\n        console.log(\"curr question : \" + this.state.currentQuestion)\n\n        return (\n            <>\n            <img src={imgRobot} alt=\"Robot\" style={{position: \"absolute\", marginLeft: \"35em\", bottom: \"0px\"}}/>\n            <Card style={{ width: '20rem', marginBottom: \"1em\" }}>\n                <Card.Header as=\"h4\">\n                    Tour : {this.state.tourAct} / {this.state.nbTours}\n                </Card.Header>\n                <Card.Body className=\"robot-infos\">\n                    <h5 style={{ marginBottom: '1em' }}>{this.state.robotName}</h5>\n                    \n                    Intégrité du robot :\n                    <ProgressBar animated \n                        now={this.state.robotIntegrity} \n                        variant={this.state.progColor} \n                        label={<b>{this.state.robotIntegrity}%</b>} \n                        style={{ marginTop: '1em', height: \"2em\" }} \n                    />\n                </Card.Body>\n            </Card>\n            <Law/> \n\n            <div>{main}</div>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Card, Button, Row, Col} from 'react-bootstrap';\nimport \"./css/about.css\"\n\nexport default class About extends Component {\n    render () {\n        return (\n            <>\n            <Button size=\"sm\" variant=\"danger\" href=\"/\">Retour à l'accueil</Button>\n            <h1 style={{ textAlign: \"center\", color: \"white\" }}>Crédits</h1>\n            <div style={{padding:70, paddingTop: 30}}>\n            <Row style={{justifyContent: \"center\"}}>\n                <Col sm>\n                    <Card className=\"cardMember\" style={{marginLeft: \"auto\", marginRight: \"auto\", width: 250}}>\n                    <Card.Img variant=\"top\" src=\"/images/jean_phe.jpg\" />\n                    <Card.Body>\n                        <Card.Title>Jean Phé</Card.Title>\n                        <Card.Text>\n                        Visez l'excellence.\n                        </Card.Text>\n                        <Button variant=\"secondary\" block size=\"sm\" target=\"_blank\" href=\"https://www.linkedin.com/in/jean-thavorak-phe-a648b1174\">En Savoir plus</Button>\n                    </Card.Body>\n                    </Card>;\n                </Col>\n\n                <Col sm>\n                    <Card className=\"cardMember\" style={{marginLeft: \"auto\", marginRight: \"auto\", width: 250}}>\n                    <Card.Img variant=\"top\" src=\"/images/eyermann.png\" />\n                    <Card.Body>\n                        <Card.Title>Thomas Eyermann</Card.Title>\n                        <Card.Text>\n                            Ne rien faire, mais le faire bien.\n                        </Card.Text>\n                    </Card.Body>\n                    </Card>;\n                </Col>\n                <Col sm>\n                    <Card className=\"cardMember\" style={{marginLeft: \"auto\", marginRight: \"auto\", width: 250}}>\n                    <Card.Img variant=\"top\" src=\"/images/quentin.png\" style={{height:250, width : 250}}/>\n                    <Card.Body>\n                        <Card.Title>Quentin Schaeffer</Card.Title>\n                        <Card.Text>\n                            Il n'y a pas de projets urgents, que des projets en retard.\n                        </Card.Text>\n                        <Button variant=\"secondary\" block size=\"sm\" target=\"_blank\" href=\"https://quentinschaeffer.fr\">En Savoir plus</Button>\n                    </Card.Body>\n                    </Card>;\n                </Col>\n                <Col sm>\n                    <Card className=\"cardMember\" style={{marginLeft: \"auto\", marginRight: \"auto\", width: 250}}>\n                    <Card.Img variant=\"top\" src=\"/images/maxime.jpg\" />\n                    <Card.Body>\n                        <Card.Title>Maxime Princelle</Card.Title>\n                        <Card.Text>\n                        Les meilleures choses qui arrivent dans le monde de l’entreprise ne sont pas le résultat du travail d’un seul homme. C’est le travail de toute une équipe.\n                        </Card.Text>\n                        <Button variant=\"secondary\" block size=\"sm\" target=\"_blank\" href=\"https://princelle.org/\">En Savoir plus</Button>\n                    </Card.Body>\n                    </Card>;\n                </Col>\n            </Row>\n            </div>\n            </>\n        )\n    }\n\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./css/App.css\";\nimport Welcome from './welcome';\nimport Game from './MainGame';\nimport About from './about';\n\nfunction Accueil() {\n  return (<Welcome/>);\n}\n\nfunction Main() {\n  return (<Game/>);\n}\n\nfunction about(){\n  return (<About/>)\n}\n\nfunction AppRouter() {\n  return (\n    <Router>\n        <Route path=\"/\" exact component={Accueil} />\n        <Route path=\"/game/\" component={Main} />\n        <Route path=\"/about/\" component={about}/>\n    </Router>\n  );\n}\n\nexport default AppRouter;\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './design/stars'\nimport './css/index.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\nimport Router from './Router';\nimport {Helmet} from \"react-helmet\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <div>\n        <Helmet>\n            <title>Accuracy Robots</title>\n            <meta name=\"description\" content=\"A game with a robot.\" />\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, shrink-to-fit=yes\" />\n        </Helmet>\n        <Router />\n    </div>, \n    document.getElementById('root')\n    );\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}